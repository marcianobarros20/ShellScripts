#!/bin/bash
#Author: Santanu
#Descripttion: This application will check all your modified files and untracked files and will commit your code. And also it'll merge your code to remote branch and push your code to remote branch.


#Push all the latest code to remote repository
function pullandpush {
	read -p "Do you to want push this branch to remote branch? Press y/n" yn
    case $yn in
        [Yy]* ) 
			git pull origin $current_branch_name;
			git push origin $current_branch_name;
			echo 'Thanks for using this application!!'; 
			exit
			;;
        [Nn]* ) 
			echo 'Thanks for using this application!!'; 
			exit
			;;
        * ) echo 'Please answer yes or no.';;
    esac
}

#After merge, pull, push checkout to new branch
function checkouttoanotherbranch {
	read -p "Do you to checkout to another branch? Press y/n" yn
    case $yn in
        [Yy]* ) echo "Please enter the branch name";
                read input_variable;
				git checkout $input_variable;
                ;;
		
        [Nn]* )
				maincontrolmethod
                ;;
        * ) echo "Please answer yes or no.";;
    esac
}


#This method is for after merging two branch and push the code to remote branch after pulling the latest
function mergebranchandpush {
	read -p "Do you to want merge this branch to another branch? Press y/n" yn
    case $yn in
        [Yy]* )
			merger
			exit;;
        [Nn]* ) 
			pullandpush
			exit
			;;
        * ) echo 'Please answer yes or no.';;
    esac
}

#This method will merge two branch
function merger {
	echo "Please enter the branch name";
    read input_new_branch;
	current_branch_name=$(git symbolic-ref -q HEAD);
	echo $current_branch_name;
    git merge $input_new_branch;
    checkouttoanotherbranch
}



#This is the main body of our main controller method
function maincontrolmethod {
	branch_name=$(git symbolic-ref -q HEAD);
	echo $branch_name;
	git status -s | grep -v '??' &> /dev/null && {
		let count_changed=${count_changed}+1
	}
	if [ -z $count_changed ]
	    then echo "Your Branch is already up-to-date! Nothing to Commit or Push"
	    exit
	else
		echo "Modified file number count is $count_changed"
		while true; do
		    read -p "Some untracked files are there. Press Yes to continue by adding all the files? Press y/n" yn 
		    case $yn in
        		[Yy]* )
		    		git add -A .
		    		echo "Please enter the commit message";
					read input_message
					git commit -m "$input_message";
			        read -p "Do you wanna merge all the commit message together in one?Press Yes to continue by adding all the files? Press y/n" yn 
			        case $yn in
				        [Yy]* ) 
							echo "Here is your commit log";
							git log --pretty=format:"%h - %an";
							echo "Please copy and paste the commit head that you want to make the commit merger head";
							read input_mergerhead;
							git reset --soft $input_mergerhead;
							git commit --amend;
							mergebranchandpush
						    ;;
				        [Nn]* ) 
							mergebranchandpush
							;;
				        * )	echo 'Please answer yes or no.';;
				    esac
					mergebranchandpush
					;;
				[Nn]* ) 
					read -p echo 'Remove all files or stash them?' yn 
			    	case $yn in
						[Yy]* )
							sudo git stash
							exit
							;;
						[Nn]* ) 
							echo "Sorry we can not proceed further!"
							exit
							;;
					    * ) 
							echo 'Please answer yes or no. Press y for Yes and n for No.';;
					esac
					;;
			    * ) 
					echo 'Please answer yes or no. Press y for Yes and n for No.';;
	    	esac
	    done
	fi
}

# This is the start point of scripts main method 
while true; do
	echo "Welcome to our application.";
	echo "Please provide full path for your project folder.";
    read input__folder_path
    cd $input__folder_path
    echo "Here is your list of all branches.";
    git branch
    maincontrolmethod
done
